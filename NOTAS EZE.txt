El cajero o supervisor deben tener asociado un calendario para saber los dias que trabajo.
Cuando se loguea se agrega un dia a su lista de dias de trabajo


Para Graficos de indicadores:
la cantidad de ventas que hizo un cajero en un dia En $ o por numero de ventas


Preguntar si se puede cambiar los Filtros para los Indicadores a solo hacer mes o año sin desde hasta. Mas facil
El indicador mensual tambien hay que especificarle el año?
En los indicadores de comparatvas no seria mejor dar a elegir mediante checkboxs los cajeros a comparar. Sino, se comparan todos???


Meti esto en el layout para que no se guarde en cache:

<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="Expires" CONTENT="-1">


<ds:table name="cajerosList" sort="list"  prop="formDisplaytag" export="false" id="row" pagesize="10" class="list"  cellspacing="0" cellpadding="3">
							<% User cajeroUser = (User) row;%>
							<ds:column titleKey="UserForm.name" headerClass="listTitle" property="completeName" />
					    	<ds:column headerClass="listTitle"  title="&nbsp;">
								<html:multibox property="cajerosArray" value="<%= cajeroUser.getId().toString() %>"></html:multibox>
					    		<input type="hidden" name="cajerosArray" value="-1">
					    	</ds:column>        
						</ds:table>

		
		
		

_________________________________________________________________
Falta llenar los graficos con datos reales
VER CACHE DE GRAFICOS
VER GRAFICOS DE PDFs

forms[0].VirtualDispatchName.value='executeMonthlySales'; 
		forms[0].submit();
		alert('sendOrder');
		window.open('pages/manager/sendOrders.jsp','my_new_window','toolbar=no, location=no, directories=no, status=yes, menubar=no, scrollbars=yes, resizable=no,copyhistory=no, width=815, height=640');
		
		
product.state.pending
 
super.sendMail(emailTo, sb);

_____________________________________________________________
______________________________________________________________


En la pantalla actualmente se filtra por grupo de producto y/o producto, ademas de que se ingresan los dias a 
simular (para el TamPedido) y los dias de margen (para el StockReposicion)
 
Hoy es 25 de octubre
Si pongo que simule 6 dias, estoy diciendo que por seis dias quiero tener merca
Entonces:
Voy a 25 de octubre del 2009 y me voy moviendo dia por dia, incrementando para CADA producto filtrado la cantidad vendida.
Una vez que termino de recorrer los dias, a esa cantidad le sumo o le resto el crecimiento (puede ser + o -). Eso me da el 
tamaño de pedido de cada producto.
Por otro lado, con los dias de margen, estoy diciendo, bueno, dos dias antes de quedarme sin stock, quiero que ya me aparezca 
para poder hacer el pedido (siempre estimando), osea, que dos días antes debe aparecer en la lista (del home del manager) 
de emision de pedido.
Ahi lo que tenes que hacer, cuando vas recorriendo los dias de las ventas a simular, preguntar si faltan dos dias para terminar
de simular, si es asi, incrementas esos dias (configurados en el margen de dias) y eso (sumando el crecimiento) te da el SR.
 
Con respecto al creciemiento del super, lo haria desde, por ejemplo este caso, 25 de octubre del año pasado a hoy



------..--..--..--..--..--..
1- Armar mapeo de cosas que carga la app descktop
2- Check en jsp para ver los elementos a simular, campo donde se ponen los valores devueltos por simulador con opcion de cambiarlo.
	(filtras productos o grupo de productos y recien ahi das la opcion de simular?)
	Boton "filtrar" (trae productos ejerciendo filtros)
	Boton de "simular" (simula)
	Boton "Aplicar cambios" (aplica cambios en los productos, con o sin check, mientras tenga algo en los campos)
3- Armar algoritmo de simulacion
4- Armar base de datos con datos de 2 o 3 años de ventas


por cada año pedido (contar año actual)
	ver ventas de ese año 
Calcular porcentajes de diferencias (n-1)
CALCULAR MEDIA DE PORCENTAJES ?

por cada producto
	por la cantidad de años pedidos
		desde la fecha pedida hasta esa misma fecha mas los dias pedidos(del año i)
		Traer ventas entre esas fechas
		TP Total de ventas
		SR totals ventas - ventas en los n ultimos dias

	CALCULAR MEDIA DE VENTAS Y SR?
	MULTIPLICAR CON MEDIA DE PORCENTAJES?
____________________________________________________________________________

<tr><td>
	<TABLE align="right" class="buttons" border="0" cellspacing="0" cellpadding="3">
		<TR>	
			<td width="100%">&nbsp;</td>
			<TD align="right"  width="130px" >        				
			   <input width="130px" class="btn" value="Enviar Pedido"
					 onclick="sendOrder();">
			</TD>	
		</TR>
	</TABLE>
</td></tr>

____________________________________________________________________________

DIFERENCIAS

- en producto.hbm de DESCKTOP no tiene la propiedad activo
- home de manager, los check andan mal. AllUnselected no esta en el formulario. Usar multibox


CREATE TABLE `dailymarket`.`productoventa` (
  `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProduct` INTEGER UNSIGNED NOT NULL,
  `idSesion` INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY (`id`)
)

CREATE TABLE `dailymarket`.`sesionventa` (
  `idSesion` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  `cajeroid` INTEGER UNSIGNED,
  `totalventa` DOUBLE,
  `idcaja` INTEGER UNSIGNED,
  `fechainicio` TIMESTAMP NOT NULL,
  PRIMARY KEY (`idSesion`)
)


Agregar en el ABM del producto el campo código de producto

########## EJECUCION DE LA CARGA MASIVA

- para el 2009 en UserAction cambiar el metodo     	//CARGA DE SESION VENTA
    	userService.cargaMasivaDeSesiones(100, 2009); pasaron de 80 a 100 las ventas maximas por dia
		
- para el 2010 en UserAction cambiar el metodo     	//CARGA DE SESION VENTA
    	userService.cargaMasivaDeSesiones(120, 2010); pasaron de 80 a 120 las ventas maximas por dia
		
	Cambiar en UserService 			GregorianCalendar gcUltima = new GregorianCalendar(anio, 9, 29); que es la fecha de hoy
	
	

	public void cargaMasivaDeSesiones(int maximoVentasPorDia, int anio) {
		
		try {
			GregorianCalendar gc = new GregorianCalendar(anio,0,1);
			SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy");
			System.out.println("Se crean ventas desde " + sf.format(gc.getTime()));
			GregorianCalendar gcUltima = new GregorianCalendar(anio, 11, 31);
			
			int cantidadVentasPorDia = (10 +new Random().nextInt(maximoVentasPorDia));  
			UserService userService = new UserService();
			ProductService productService = new ProductService();
			
			User user = userService.getUser("abe");
			
			while (gc.getTime().before(gcUltima.getTime())) {
					
					for (int i = 0; i < cantidadVentasPorDia; i++) {
						
						Double totalVenta = new Double(0);
						
						SesionVenta sesionVenta = new SesionVenta();
						sesionVenta.setCajero(user);
						sesionVenta.setFechaInicio(gc.getTime());
						sesionVenta.setIdCaja(new Long(1));
						
						HibernateHelper.currentSession().saveOrUpdate(sesionVenta);
						HibernateHelper.currentSession().flush();		
						
						for (int j = 1; j < 9; j++) {
							Product product = productService.getProductByPK(new Long(j));
							int cant = (new Random().nextInt(11)); 
							for (int k = 0; k < cant; k++) {	//cantidad del mismo producto
								
								ProductoVenta productoVenta = new ProductoVenta();
								productoVenta.setProducto(product);
								productoVenta.setSesionVenta(sesionVenta);
								HibernateHelper.currentSession().saveOrUpdate(productoVenta);
								HibernateHelper.currentSession().flush();
								
								totalVenta+= product.getPrice();
							}

							
						}
						
						sesionVenta.setTotalVenta(totalVenta);
						
						HibernateHelper.currentSession().saveOrUpdate(sesionVenta);
						HibernateHelper.currentSession().flush();	
						
					}
					
					gc.add(GregorianCalendar.DAY_OF_YEAR, 1);
				
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		

		
		
		
		
	}

IMPORTANTE VENTAS:

Al generar la ventas los horarios deben ser los de las bandas horarias no un new Date()

______________________________________________________________________________________________________________________

Al mandar un mail y luego actualizar el estado a enviado
el objeto queda con el estado correcto pero como si hubiera varias instancias de ese objeto con el estado distinto
En la base no tiene el estado correcto


CORREGIR:

En cada lugar donde haya un save o un update o un saveorupdate hay que comenzar una transaccion y commitearla
